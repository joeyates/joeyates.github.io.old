<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Setup | Joe Yates' Blog]]></title>
  <link href="http://joeyates.info/blog/categories/setup/atom.xml" rel="self"/>
  <link href="http://joeyates.info/"/>
  <updated>2018-12-16T10:03:11+01:00</updated>
  <id>http://joeyates.info/</id>
  <author>
    <name><![CDATA[Joe Yates]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Dotfiles]]></title>
    <link href="http://joeyates.info/2018/12/16/dotfiles/"/>
    <updated>2018-12-16T09:32:14+01:00</updated>
    <id>http://joeyates.info/2018/12/16/dotfiles</id>
    <content type="html"><![CDATA[<p>This post presents a &ldquo;Pure Git&rdquo; approach to managing dotfiles:</p>

<ul>
<li>No symlinks,</li>
<li>No scripts,</li>
<li>Just Git configuration.</li>
</ul>


<p>It is inspired by a <a href="https://news.ycombinator.com/item?id=11070797">comment on Hacker News</a>.</p>

<h1>How it works</h1>

<p>The dotfiles repo is cloned to <code>~/.dotfiles</code>, but Git is told that
the working directory is the home directory.</p>

<p>From then on, it&rsquo;s just a Git repo.</p>

<p>You can add any file in your home directory or subdirectories below it.</p>

<h1>Getting Started</h1>

<p>You <strong>could</strong> clone someone else&rsquo;s dotfiles, but I advise against it -
it&rsquo;s best to understand what you have by stealing here and there.</p>

<h2>Create your Dotfiles Repo</h2>

<ul>
<li>Create an empty Git repo somewhere (I use <a href="https://gitlab.com/">GitLab</a>),</li>
<li>Follow the next section.</li>
</ul>


<p>It is a good idea to add a <code>README</code> file to the root of your repo with a copy
the setup steps below. That way, you know where to look every time
you need to set up on a fresh computer.</p>

<h2>Install your Repo</h2>

<p>If you&rsquo;re installing on a new computer, you can do the following:</p>

<pre><code class="bash">$ git clone --bare &lt;my repo&gt; ~/.dotfiles
$ cd ~/.dotfiles
$ git config --local core.bare false
$ git config --local core.worktree &lt;my home&gt;
$ git config --local status.showUntrackedFiles no
$ git reset
</code></pre>

<p>These steps have cloned and set up the Git repo, but so far nothing has changed.</p>

<p>Now, run the following to check what will change when you &ldquo;install&rdquo; the
dotfiles:</p>

<pre><code>$ git status
</code></pre>

<p>Check you are not going to overwrite any local files with local changes
you want to keep.</p>

<p>Beware - the next line installs the current version of files in your dotfiles
repo, potentially overwriting different versions in your home directory (or
subdirectories).</p>

<pre><code>$ git reset --hard HEAD --
</code></pre>

<p>That&rsquo;s it, your home directory is now managed by Git!</p>

<h1>Maintenance</h1>

<p><code>cd</code> to your <code>~/.dotfiles</code> directory.</p>

<p>Run <code>git status</code> to see what has changed.</p>

<p><strong>Note that all file operations have a <code>..</code> prefix</strong></p>

<pre><code class="bash">$ git add ../foobar
</code></pre>

<h1>Outside the .dotfiles directory</h1>

<p>Use the following to manage your repo without having to <code>cd</code> to <code>~/.dotfiles</code>:</p>

<pre><code class="bash">git --git-dir=$HOME/.dotfiles --work-tree=$HOME &lt;command&gt; [ARGS]
</code></pre>

<p>You can add this to your <code>.bashrc</code> or <code>.zshrc</code> as follows:</p>

<pre><code class="bash">alias dotgit="git --git-dir=$HOME/.dotfiles --work-tree=$HOME"
</code></pre>

<p>If you add <strong>that</strong> to your dotfiles repo, that&rsquo;s really all the
configuration you need.</p>

<h1>Notes</h1>

<h2><code>.gitignore</code></h2>

<p>The is no <code>.gitignore</code> in this system, as Git is instructed to ignore all
files that are not part of the repo.</p>

<h2>Automation</h2>

<p>If you want to automate adding local changes to your repo, it should be
quite easy. Though, you&rsquo;ll need to decide how to deal with remote changes
if you are using your dotfiles on more than one computer.</p>

<h2>Branches</h2>

<p>If you have big differences between your needs on your various computers,
you can even keep differences in branches!</p>

<h1>That&rsquo;s It</h1>

<p>Enjoy your lightweight dotfiles!</p>
]]></content>
  </entry>
  
</feed>
